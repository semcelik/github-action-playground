name: Bump and Deploy

on:
  push:
    branches: [ master ]

env:
  NODE_VERSION: 14.x
  PAT: ${{ secrets.PAT }}

jobs:
  bump-version:
    name: Bump Version
    runs-on: ubuntu-latest
    outputs:
      newTag: ${{ steps.version-bump.outputs.newTag }}

    steps:
      - name: Checkout source code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}
          token: ${{ env.PAT }}

      - name: cat package.json
        run: cat ./package.json

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Bump Version
        id: version-bump
        uses: phips28/gh-action-bump-version@master
        with:
          tag-prefix: ''
          minor-wording: 'MINOR'
          major-wording: 'MAJOR'
          patch-wording: 'PATCH'
        env:
          GITHUB_TOKEN: ${{ env.PAT }}

      - name: cat package.json
        run: cat ./package.json

      - name: Create New Tag
        env:
          NEW_TAG: ${{ steps.version-bump.outputs.newTag }}
        run: echo "new tag $NEW_TAG"

  create-release:
    needs: bump-version
    if: startsWith(needs.bump-version.outputs.newTag, 'v')
    runs-on: ubuntu-latest

    steps:
      - name: Get tag from previous job
        run: echo "Generating release with the ${{needs.bump-version.outputs.newTag}} tag"

      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}
          token: ${{ env.PAT }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ env.PAT }}
        with:
          tag_name: ${{needs.bump-version.outputs.newTag}}
          release_name: Release ${{needs.bump-version.outputs.newTag}}
          draft: false
          prerelease: false

#  publish-to-npm:
#    needs: [ bump-version, create-release ]
#    if: startsWith(needs.bump-version.outputs.newTag, 'v')
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v2
#
#      - name: Use Node.js ${{ env.NODE_VERSION }}
#        uses: actions/setup-node@v1
#        with:
#          registry-url: https://registry.npmjs.org
#          node-version: ${{ env.NODE_VERSION }}
#
#      - name: Install dependencies
#        run: yarn
#
#      #- name: Run tests??
#      #  run: yarn test
#      - name: Create build
#        run: yarn build
#
#      - name: Publish to NPM
#        run: yarn publish
#        env:
#          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
